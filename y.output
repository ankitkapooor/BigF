Terminals unused in grammar

    GEQ
    TO
    EMINUS


State 112 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 136 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 142 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 13 shift/reduce


Grammar

    0 $accept: prm $end

    1 $@1: %empty

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON

    3 $@2: %empty

    4 STATEMENTS: STATEMENTS $@2 STATEMENT
    5           | %empty

    6 STATEMENT: VAR_START DOT TYPE DOT VAR_LIST SEMICOLON

    7 $@3: %empty

    8 $@4: %empty

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON
   10          | READ LB READ_VAR_LIST RB SEMICOLON
   11          | WRITE LB WRITE_VAR_LIST RB SEMICOLON
   12          | IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF
   13          | IF_BLOCK ENDIF

   14 $@5: %empty

   15 $@6: %empty

   16 STATEMENT: GOTO $@5 VAR $@6 SEMICOLON

   17 $@7: %empty

   18 $@8: %empty

   19 $@9: %empty

   20 $@10: %empty

   21 $@11: %empty

   22 $@12: %empty

   23 $@13: %empty

   24 $@14: %empty

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

   26 $@15: %empty

   27 $@16: %empty

   28 STATEMENT: REPEAT $@15 STATEMENTS UNTIL LB $@16 A_EXPN RB

   29 $@17: %empty

   30 $@18: %empty

   31 STATEMENT: WHILE LB $@17 A_EXPN RB DO $@18 STATEMENTS ENDWHILE
   32          | VAR COLON
   33          | COMMENT
   34          | BRK SEMICOLON

   35 $@19: %empty

   36 $@20: %empty

   37 IF_BLOCK: IF LB $@19 A_EXPN RB $@20 DO STATEMENTS

   38 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK
   39              | %empty

   40 $@21: %empty

   41 $@22: %empty

   42 ELSEIF_BLOCK: ELSEIF LB $@21 A_EXPN RB $@22 DO STATEMENTS

   43 $@23: %empty

   44 ELSE_BLOCK: ELSE $@23 STATEMENTS

   45 $@24: %empty

   46 VAR_LIST: VAR $@24 COMA VAR_LIST
   47         | VAR

   48 TYPE: INT
   49     | CHAR
   50     | FLOAT
   51     | DOUBLE

   52 $@25: %empty

   53 WRITE_VAR_LIST: QUOTED_STRING $@25 COMA WRITE_VAR_LIST

   54 $@26: %empty

   55 WRITE_VAR_LIST: VAR $@26 COMA WRITE_VAR_LIST
   56               | QUOTED_STRING
   57               | VAR

   58 $@27: %empty

   59 READ_VAR_LIST: VAR $@27 COMA READ_VAR_LIST
   60              | VAR

   61 $@28: %empty

   62 A_EXPN: A_EXPN LAND $@28 A_EXPN

   63 $@29: %empty

   64 A_EXPN: A_EXPN LOR $@29 A_EXPN

   65 $@30: %empty

   66 A_EXPN: A_EXPN LEQ $@30 A_EXPN

   67 $@31: %empty

   68 A_EXPN: A_EXPN GT $@31 A_EXPN

   69 $@32: %empty

   70 A_EXPN: A_EXPN LT $@32 A_EXPN

   71 $@33: %empty

   72 A_EXPN: A_EXPN NEQ $@33 A_EXPN

   73 $@34: %empty

   74 A_EXPN: A_EXPN DEQ $@34 A_EXPN

   75 $@35: %empty

   76 A_EXPN: NOT $@35 A_EXPN

   77 $@36: %empty

   78 A_EXPN: A_EXPN PLUS $@36 A_EXPN

   79 $@37: %empty

   80 A_EXPN: A_EXPN MINUS $@37 A_EXPN

   81 $@38: %empty

   82 A_EXPN: A_EXPN MUL $@38 A_EXPN

   83 $@39: %empty

   84 A_EXPN: A_EXPN DIV $@39 A_EXPN

   85 $@40: %empty

   86 A_EXPN: A_EXPN MOD $@40 A_EXPN

   87 $@41: %empty

   88 A_EXPN: A_EXPN EPLUS $@41 A_EXPN
   89       | TERMINALS

   90 TERMINALS: VAR
   91          | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER (258) 91
    PROC (259) 2
    MAIN (260) 2
    BGIN (261) 2
    COLON (262) 2 32
    END (263) 2
    ASSIGNMENT (264) 9 25
    VAR_START (265) 6 25
    COMA (266) 25 46 53 55 59
    SEMICOLON (267) 6 9 10 11 16 34
    VAR <var_name> (268) 9 16 25 32 46 47 55 57 59 60 90
    READ (269) 10
    LB (270) 10 11 25 28 31 37 42
    RB (271) 10 11 25 28 31 37 42
    WRITE (272) 11
    QUOTED_STRING (273) 53 56
    IF (274) 37
    ELSE (275) 44
    ENDIF (276) 12 13
    GEQ (277)
    LEQ (278) 66
    GT (279) 68
    LT (280) 70
    NEQ (281) 72
    DEQ (282) 74
    NOT (283) 76
    LAND (284) 62
    LOR (285) 64
    GOTO (286) 16
    ELSEIF (287) 42
    FOR (288) 25
    TO (289)
    DO (290) 25 31 37 42
    ENDFOR (291) 25
    ARROW_ASSIGNMENT (292)
    PLUS (293) 25 78
    MINUS (294) 80
    MUL (295) 82
    DIV (296) 84
    MOD (297) 86
    REPEAT (298) 28
    UNTIL (299) 25 28
    WHILE (300) 31
    ENDWHILE (301) 31
    COMMENT (302) 33
    DOT (303) 6 25
    BRK (304) 34
    EPLUS (305) 88
    EMINUS (306)
    INT <data_type> (307) 48
    CHAR <data_type> (308) 49
    FLOAT <data_type> (309) 50
    DOUBLE <data_type> (310) 51


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    prm (57)
        on left: 2
        on right: 0
    $@1 (58)
        on left: 1
        on right: 2
    STATEMENTS (59)
        on left: 4 5
        on right: 2 4 25 28 31 37 42 44
    $@2 (60)
        on left: 3
        on right: 4
    STATEMENT (61)
        on left: 6 9 10 11 12 13 16 25 28 31 32 33 34
        on right: 4
    $@3 (62)
        on left: 7
        on right: 9
    $@4 (63)
        on left: 8
        on right: 9
    $@5 (64)
        on left: 14
        on right: 16
    $@6 (65)
        on left: 15
        on right: 16
    $@7 (66)
        on left: 17
        on right: 25
    $@8 (67)
        on left: 18
        on right: 25
    $@9 (68)
        on left: 19
        on right: 25
    $@10 (69)
        on left: 20
        on right: 25
    $@11 (70)
        on left: 21
        on right: 25
    $@12 (71)
        on left: 22
        on right: 25
    $@13 (72)
        on left: 23
        on right: 25
    $@14 (73)
        on left: 24
        on right: 25
    $@15 (74)
        on left: 26
        on right: 28
    $@16 (75)
        on left: 27
        on right: 28
    $@17 (76)
        on left: 29
        on right: 31
    $@18 (77)
        on left: 30
        on right: 31
    IF_BLOCK (78)
        on left: 37
        on right: 12 13
    $@19 (79)
        on left: 35
        on right: 37
    $@20 (80)
        on left: 36
        on right: 37
    ELSEIF_BLOCKS (81)
        on left: 38 39
        on right: 12 38
    ELSEIF_BLOCK (82)
        on left: 42
        on right: 38
    $@21 (83)
        on left: 40
        on right: 42
    $@22 (84)
        on left: 41
        on right: 42
    ELSE_BLOCK (85)
        on left: 44
        on right: 12
    $@23 (86)
        on left: 43
        on right: 44
    VAR_LIST (87)
        on left: 46 47
        on right: 6 46
    $@24 (88)
        on left: 45
        on right: 46
    TYPE <data_type> (89)
        on left: 48 49 50 51
        on right: 6
    WRITE_VAR_LIST (90)
        on left: 53 55 56 57
        on right: 11 53 55
    $@25 (91)
        on left: 52
        on right: 53
    $@26 (92)
        on left: 54
        on right: 55
    READ_VAR_LIST (93)
        on left: 59 60
        on right: 10 59
    $@27 (94)
        on left: 58
        on right: 59
    A_EXPN (95)
        on left: 62 64 66 68 70 72 74 76 78 80 82 84 86 88 89
        on right: 9 25 28 31 37 42 62 64 66 68 70 72 74 76 78 80 82 84 86 88
    $@28 (96)
        on left: 61
        on right: 62
    $@29 (97)
        on left: 63
        on right: 64
    $@30 (98)
        on left: 65
        on right: 66
    $@31 (99)
        on left: 67
        on right: 68
    $@32 (100)
        on left: 69
        on right: 70
    $@33 (101)
        on left: 71
        on right: 72
    $@34 (102)
        on left: 73
        on right: 74
    $@35 (103)
        on left: 75
        on right: 76
    $@36 (104)
        on left: 77
        on right: 78
    $@37 (105)
        on left: 79
        on right: 80
    $@38 (106)
        on left: 81
        on right: 82
    $@39 (107)
        on left: 83
        on right: 84
    $@40 (108)
        on left: 85
        on right: 86
    $@41 (109)
        on left: 87
        on right: 88
    TERMINALS (110)
        on left: 90 91
        on right: 25 89


State 0

    0 $accept: . prm $end

    PROC  shift, and go to state 1

    prm  go to state 2


State 1

    2 prm: PROC . MAIN BGIN COLON $@1 STATEMENTS END COLON

    MAIN  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    2 prm: PROC MAIN . BGIN COLON $@1 STATEMENTS END COLON

    BGIN  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    2 prm: PROC MAIN BGIN . COLON $@1 STATEMENTS END COLON

    COLON  shift, and go to state 6


State 6

    2 prm: PROC MAIN BGIN COLON . $@1 STATEMENTS END COLON

    $default  reduce using rule 1 ($@1)

    $@1  go to state 7


State 7

    2 prm: PROC MAIN BGIN COLON $@1 . STATEMENTS END COLON

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 8


State 8

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS . END COLON
    4 STATEMENTS: STATEMENTS . $@2 STATEMENT

    END  shift, and go to state 9

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 9

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END . COLON

    COLON  shift, and go to state 11


State 10

    4 STATEMENTS: STATEMENTS $@2 . STATEMENT

    VAR_START  shift, and go to state 12
    VAR        shift, and go to state 13
    READ       shift, and go to state 14
    WRITE      shift, and go to state 15
    IF         shift, and go to state 16
    GOTO       shift, and go to state 17
    FOR        shift, and go to state 18
    REPEAT     shift, and go to state 19
    WHILE      shift, and go to state 20
    COMMENT    shift, and go to state 21
    BRK        shift, and go to state 22

    STATEMENT  go to state 23
    IF_BLOCK   go to state 24


State 11

    2 prm: PROC MAIN BGIN COLON $@1 STATEMENTS END COLON .

    $default  reduce using rule 2 (prm)


State 12

    6 STATEMENT: VAR_START . DOT TYPE DOT VAR_LIST SEMICOLON

    DOT  shift, and go to state 25


State 13

    9 STATEMENT: VAR . $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON
   32          | VAR . COLON

    COLON  shift, and go to state 26

    $default  reduce using rule 7 ($@3)

    $@3  go to state 27


State 14

   10 STATEMENT: READ . LB READ_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 28


State 15

   11 STATEMENT: WRITE . LB WRITE_VAR_LIST RB SEMICOLON

    LB  shift, and go to state 29


State 16

   37 IF_BLOCK: IF . LB $@19 A_EXPN RB $@20 DO STATEMENTS

    LB  shift, and go to state 30


State 17

   16 STATEMENT: GOTO . $@5 VAR $@6 SEMICOLON

    $default  reduce using rule 14 ($@5)

    $@5  go to state 31


State 18

   25 STATEMENT: FOR . LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    LB  shift, and go to state 32


State 19

   28 STATEMENT: REPEAT . $@15 STATEMENTS UNTIL LB $@16 A_EXPN RB

    $default  reduce using rule 26 ($@15)

    $@15  go to state 33


State 20

   31 STATEMENT: WHILE . LB $@17 A_EXPN RB DO $@18 STATEMENTS ENDWHILE

    LB  shift, and go to state 34


State 21

   33 STATEMENT: COMMENT .

    $default  reduce using rule 33 (STATEMENT)


State 22

   34 STATEMENT: BRK . SEMICOLON

    SEMICOLON  shift, and go to state 35


State 23

    4 STATEMENTS: STATEMENTS $@2 STATEMENT .

    $default  reduce using rule 4 (STATEMENTS)


State 24

   12 STATEMENT: IF_BLOCK . ELSEIF_BLOCKS ELSE_BLOCK ENDIF
   13          | IF_BLOCK . ENDIF

    ENDIF  shift, and go to state 36

    $default  reduce using rule 39 (ELSEIF_BLOCKS)

    ELSEIF_BLOCKS  go to state 37


State 25

    6 STATEMENT: VAR_START DOT . TYPE DOT VAR_LIST SEMICOLON

    INT     shift, and go to state 38
    CHAR    shift, and go to state 39
    FLOAT   shift, and go to state 40
    DOUBLE  shift, and go to state 41

    TYPE  go to state 42


State 26

   32 STATEMENT: VAR COLON .

    $default  reduce using rule 32 (STATEMENT)


State 27

    9 STATEMENT: VAR $@3 . ASSIGNMENT $@4 A_EXPN SEMICOLON

    ASSIGNMENT  shift, and go to state 43


State 28

   10 STATEMENT: READ LB . READ_VAR_LIST RB SEMICOLON

    VAR  shift, and go to state 44

    READ_VAR_LIST  go to state 45


State 29

   11 STATEMENT: WRITE LB . WRITE_VAR_LIST RB SEMICOLON

    VAR            shift, and go to state 46
    QUOTED_STRING  shift, and go to state 47

    WRITE_VAR_LIST  go to state 48


State 30

   37 IF_BLOCK: IF LB . $@19 A_EXPN RB $@20 DO STATEMENTS

    $default  reduce using rule 35 ($@19)

    $@19  go to state 49


State 31

   16 STATEMENT: GOTO $@5 . VAR $@6 SEMICOLON

    VAR  shift, and go to state 50


State 32

   25 STATEMENT: FOR LB . $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    $default  reduce using rule 17 ($@7)

    $@7  go to state 51


State 33

   28 STATEMENT: REPEAT $@15 . STATEMENTS UNTIL LB $@16 A_EXPN RB

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 52


State 34

   31 STATEMENT: WHILE LB . $@17 A_EXPN RB DO $@18 STATEMENTS ENDWHILE

    $default  reduce using rule 29 ($@17)

    $@17  go to state 53


State 35

   34 STATEMENT: BRK SEMICOLON .

    $default  reduce using rule 34 (STATEMENT)


State 36

   13 STATEMENT: IF_BLOCK ENDIF .

    $default  reduce using rule 13 (STATEMENT)


State 37

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS . ELSE_BLOCK ENDIF
   38 ELSEIF_BLOCKS: ELSEIF_BLOCKS . ELSEIF_BLOCK

    ELSE    shift, and go to state 54
    ELSEIF  shift, and go to state 55

    ELSEIF_BLOCK  go to state 56
    ELSE_BLOCK    go to state 57


State 38

   48 TYPE: INT .

    $default  reduce using rule 48 (TYPE)


State 39

   49 TYPE: CHAR .

    $default  reduce using rule 49 (TYPE)


State 40

   50 TYPE: FLOAT .

    $default  reduce using rule 50 (TYPE)


State 41

   51 TYPE: DOUBLE .

    $default  reduce using rule 51 (TYPE)


State 42

    6 STATEMENT: VAR_START DOT TYPE . DOT VAR_LIST SEMICOLON

    DOT  shift, and go to state 58


State 43

    9 STATEMENT: VAR $@3 ASSIGNMENT . $@4 A_EXPN SEMICOLON

    $default  reduce using rule 8 ($@4)

    $@4  go to state 59


State 44

   59 READ_VAR_LIST: VAR . $@27 COMA READ_VAR_LIST
   60              | VAR .

    RB        reduce using rule 60 (READ_VAR_LIST)
    $default  reduce using rule 58 ($@27)

    $@27  go to state 60


State 45

   10 STATEMENT: READ LB READ_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 61


State 46

   55 WRITE_VAR_LIST: VAR . $@26 COMA WRITE_VAR_LIST
   57               | VAR .

    RB        reduce using rule 57 (WRITE_VAR_LIST)
    $default  reduce using rule 54 ($@26)

    $@26  go to state 62


State 47

   53 WRITE_VAR_LIST: QUOTED_STRING . $@25 COMA WRITE_VAR_LIST
   56               | QUOTED_STRING .

    RB        reduce using rule 56 (WRITE_VAR_LIST)
    $default  reduce using rule 52 ($@25)

    $@25  go to state 63


State 48

   11 STATEMENT: WRITE LB WRITE_VAR_LIST . RB SEMICOLON

    RB  shift, and go to state 64


State 49

   37 IF_BLOCK: IF LB $@19 . A_EXPN RB $@20 DO STATEMENTS

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 68
    TERMINALS  go to state 69


State 50

   16 STATEMENT: GOTO $@5 VAR . $@6 SEMICOLON

    $default  reduce using rule 15 ($@6)

    $@6  go to state 70


State 51

   25 STATEMENT: FOR LB $@7 . VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    VAR_START  shift, and go to state 71


State 52

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   28 STATEMENT: REPEAT $@15 STATEMENTS . UNTIL LB $@16 A_EXPN RB

    UNTIL  shift, and go to state 72

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 53

   31 STATEMENT: WHILE LB $@17 . A_EXPN RB DO $@18 STATEMENTS ENDWHILE

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 73
    TERMINALS  go to state 69


State 54

   44 ELSE_BLOCK: ELSE . $@23 STATEMENTS

    $default  reduce using rule 43 ($@23)

    $@23  go to state 74


State 55

   42 ELSEIF_BLOCK: ELSEIF . LB $@21 A_EXPN RB $@22 DO STATEMENTS

    LB  shift, and go to state 75


State 56

   38 ELSEIF_BLOCKS: ELSEIF_BLOCKS ELSEIF_BLOCK .

    $default  reduce using rule 38 (ELSEIF_BLOCKS)


State 57

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK . ENDIF

    ENDIF  shift, and go to state 76


State 58

    6 STATEMENT: VAR_START DOT TYPE DOT . VAR_LIST SEMICOLON

    VAR  shift, and go to state 77

    VAR_LIST  go to state 78


State 59

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 . A_EXPN SEMICOLON

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 79
    TERMINALS  go to state 69


State 60

   59 READ_VAR_LIST: VAR $@27 . COMA READ_VAR_LIST

    COMA  shift, and go to state 80


State 61

   10 STATEMENT: READ LB READ_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 62

   55 WRITE_VAR_LIST: VAR $@26 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 82


State 63

   53 WRITE_VAR_LIST: QUOTED_STRING $@25 . COMA WRITE_VAR_LIST

    COMA  shift, and go to state 83


State 64

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 65

   91 TERMINALS: NUMBER .

    $default  reduce using rule 91 (TERMINALS)


State 66

   90 TERMINALS: VAR .

    $default  reduce using rule 90 (TERMINALS)


State 67

   76 A_EXPN: NOT . $@35 A_EXPN

    $default  reduce using rule 75 ($@35)

    $@35  go to state 85


State 68

   37 IF_BLOCK: IF LB $@19 A_EXPN . RB $@20 DO STATEMENTS
   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    RB     shift, and go to state 86
    LEQ    shift, and go to state 87
    GT     shift, and go to state 88
    LT     shift, and go to state 89
    NEQ    shift, and go to state 90
    DEQ    shift, and go to state 91
    LAND   shift, and go to state 92
    LOR    shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MUL    shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    EPLUS  shift, and go to state 99


State 69

   89 A_EXPN: TERMINALS .

    $default  reduce using rule 89 (A_EXPN)


State 70

   16 STATEMENT: GOTO $@5 VAR $@6 . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 71

   25 STATEMENT: FOR LB $@7 VAR_START . DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    DOT  shift, and go to state 101


State 72

   28 STATEMENT: REPEAT $@15 STATEMENTS UNTIL . LB $@16 A_EXPN RB

    LB  shift, and go to state 102


State 73

   31 STATEMENT: WHILE LB $@17 A_EXPN . RB DO $@18 STATEMENTS ENDWHILE
   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    RB     shift, and go to state 103
    LEQ    shift, and go to state 87
    GT     shift, and go to state 88
    LT     shift, and go to state 89
    NEQ    shift, and go to state 90
    DEQ    shift, and go to state 91
    LAND   shift, and go to state 92
    LOR    shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MUL    shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    EPLUS  shift, and go to state 99


State 74

   44 ELSE_BLOCK: ELSE $@23 . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 104


State 75

   42 ELSEIF_BLOCK: ELSEIF LB . $@21 A_EXPN RB $@22 DO STATEMENTS

    $default  reduce using rule 40 ($@21)

    $@21  go to state 105


State 76

   12 STATEMENT: IF_BLOCK ELSEIF_BLOCKS ELSE_BLOCK ENDIF .

    $default  reduce using rule 12 (STATEMENT)


State 77

   46 VAR_LIST: VAR . $@24 COMA VAR_LIST
   47         | VAR .

    SEMICOLON  reduce using rule 47 (VAR_LIST)
    $default   reduce using rule 45 ($@24)

    $@24  go to state 106


State 78

    6 STATEMENT: VAR_START DOT TYPE DOT VAR_LIST . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 79

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN . SEMICOLON
   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    SEMICOLON  shift, and go to state 108
    LEQ        shift, and go to state 87
    GT         shift, and go to state 88
    LT         shift, and go to state 89
    NEQ        shift, and go to state 90
    DEQ        shift, and go to state 91
    LAND       shift, and go to state 92
    LOR        shift, and go to state 93
    PLUS       shift, and go to state 94
    MINUS      shift, and go to state 95
    MUL        shift, and go to state 96
    DIV        shift, and go to state 97
    MOD        shift, and go to state 98
    EPLUS      shift, and go to state 99


State 80

   59 READ_VAR_LIST: VAR $@27 COMA . READ_VAR_LIST

    VAR  shift, and go to state 44

    READ_VAR_LIST  go to state 109


State 81

   10 STATEMENT: READ LB READ_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 10 (STATEMENT)


State 82

   55 WRITE_VAR_LIST: VAR $@26 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 46
    QUOTED_STRING  shift, and go to state 47

    WRITE_VAR_LIST  go to state 110


State 83

   53 WRITE_VAR_LIST: QUOTED_STRING $@25 COMA . WRITE_VAR_LIST

    VAR            shift, and go to state 46
    QUOTED_STRING  shift, and go to state 47

    WRITE_VAR_LIST  go to state 111


State 84

   11 STATEMENT: WRITE LB WRITE_VAR_LIST RB SEMICOLON .

    $default  reduce using rule 11 (STATEMENT)


State 85

   76 A_EXPN: NOT $@35 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 112
    TERMINALS  go to state 69


State 86

   37 IF_BLOCK: IF LB $@19 A_EXPN RB . $@20 DO STATEMENTS

    $default  reduce using rule 36 ($@20)

    $@20  go to state 113


State 87

   66 A_EXPN: A_EXPN LEQ . $@30 A_EXPN

    $default  reduce using rule 65 ($@30)

    $@30  go to state 114


State 88

   68 A_EXPN: A_EXPN GT . $@31 A_EXPN

    $default  reduce using rule 67 ($@31)

    $@31  go to state 115


State 89

   70 A_EXPN: A_EXPN LT . $@32 A_EXPN

    $default  reduce using rule 69 ($@32)

    $@32  go to state 116


State 90

   72 A_EXPN: A_EXPN NEQ . $@33 A_EXPN

    $default  reduce using rule 71 ($@33)

    $@33  go to state 117


State 91

   74 A_EXPN: A_EXPN DEQ . $@34 A_EXPN

    $default  reduce using rule 73 ($@34)

    $@34  go to state 118


State 92

   62 A_EXPN: A_EXPN LAND . $@28 A_EXPN

    $default  reduce using rule 61 ($@28)

    $@28  go to state 119


State 93

   64 A_EXPN: A_EXPN LOR . $@29 A_EXPN

    $default  reduce using rule 63 ($@29)

    $@29  go to state 120


State 94

   78 A_EXPN: A_EXPN PLUS . $@36 A_EXPN

    $default  reduce using rule 77 ($@36)

    $@36  go to state 121


State 95

   80 A_EXPN: A_EXPN MINUS . $@37 A_EXPN

    $default  reduce using rule 79 ($@37)

    $@37  go to state 122


State 96

   82 A_EXPN: A_EXPN MUL . $@38 A_EXPN

    $default  reduce using rule 81 ($@38)

    $@38  go to state 123


State 97

   84 A_EXPN: A_EXPN DIV . $@39 A_EXPN

    $default  reduce using rule 83 ($@39)

    $@39  go to state 124


State 98

   86 A_EXPN: A_EXPN MOD . $@40 A_EXPN

    $default  reduce using rule 85 ($@40)

    $@40  go to state 125


State 99

   88 A_EXPN: A_EXPN EPLUS . $@41 A_EXPN

    $default  reduce using rule 87 ($@41)

    $@41  go to state 126


State 100

   16 STATEMENT: GOTO $@5 VAR $@6 SEMICOLON .

    $default  reduce using rule 16 (STATEMENT)


State 101

   25 STATEMENT: FOR LB $@7 VAR_START DOT . VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    VAR  shift, and go to state 127


State 102

   28 STATEMENT: REPEAT $@15 STATEMENTS UNTIL LB . $@16 A_EXPN RB

    $default  reduce using rule 27 ($@16)

    $@16  go to state 128


State 103

   31 STATEMENT: WHILE LB $@17 A_EXPN RB . DO $@18 STATEMENTS ENDWHILE

    DO  shift, and go to state 129


State 104

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   44 ELSE_BLOCK: ELSE $@23 STATEMENTS .

    ENDIF     reduce using rule 44 (ELSE_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 105

   42 ELSEIF_BLOCK: ELSEIF LB $@21 . A_EXPN RB $@22 DO STATEMENTS

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 130
    TERMINALS  go to state 69


State 106

   46 VAR_LIST: VAR $@24 . COMA VAR_LIST

    COMA  shift, and go to state 131


State 107

    6 STATEMENT: VAR_START DOT TYPE DOT VAR_LIST SEMICOLON .

    $default  reduce using rule 6 (STATEMENT)


State 108

    9 STATEMENT: VAR $@3 ASSIGNMENT $@4 A_EXPN SEMICOLON .

    $default  reduce using rule 9 (STATEMENT)


State 109

   59 READ_VAR_LIST: VAR $@27 COMA READ_VAR_LIST .

    $default  reduce using rule 59 (READ_VAR_LIST)


State 110

   55 WRITE_VAR_LIST: VAR $@26 COMA WRITE_VAR_LIST .

    $default  reduce using rule 55 (WRITE_VAR_LIST)


State 111

   53 WRITE_VAR_LIST: QUOTED_STRING $@25 COMA WRITE_VAR_LIST .

    $default  reduce using rule 53 (WRITE_VAR_LIST)


State 112

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   76       | NOT $@35 A_EXPN .
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 76 (A_EXPN)]
    $default  reduce using rule 76 (A_EXPN)


State 113

   37 IF_BLOCK: IF LB $@19 A_EXPN RB $@20 . DO STATEMENTS

    DO  shift, and go to state 132


State 114

   66 A_EXPN: A_EXPN LEQ $@30 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 133
    TERMINALS  go to state 69


State 115

   68 A_EXPN: A_EXPN GT $@31 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 134
    TERMINALS  go to state 69


State 116

   70 A_EXPN: A_EXPN LT $@32 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 135
    TERMINALS  go to state 69


State 117

   72 A_EXPN: A_EXPN NEQ $@33 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 136
    TERMINALS  go to state 69


State 118

   74 A_EXPN: A_EXPN DEQ $@34 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 137
    TERMINALS  go to state 69


State 119

   62 A_EXPN: A_EXPN LAND $@28 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 138
    TERMINALS  go to state 69


State 120

   64 A_EXPN: A_EXPN LOR $@29 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 139
    TERMINALS  go to state 69


State 121

   78 A_EXPN: A_EXPN PLUS $@36 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 140
    TERMINALS  go to state 69


State 122

   80 A_EXPN: A_EXPN MINUS $@37 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 141
    TERMINALS  go to state 69


State 123

   82 A_EXPN: A_EXPN MUL $@38 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 142
    TERMINALS  go to state 69


State 124

   84 A_EXPN: A_EXPN DIV $@39 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 143
    TERMINALS  go to state 69


State 125

   86 A_EXPN: A_EXPN MOD $@40 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 144
    TERMINALS  go to state 69


State 126

   88 A_EXPN: A_EXPN EPLUS $@41 . A_EXPN

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 145
    TERMINALS  go to state 69


State 127

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR . $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    $default  reduce using rule 18 ($@8)

    $@8  go to state 146


State 128

   28 STATEMENT: REPEAT $@15 STATEMENTS UNTIL LB $@16 . A_EXPN RB

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 147
    TERMINALS  go to state 69


State 129

   31 STATEMENT: WHILE LB $@17 A_EXPN RB DO . $@18 STATEMENTS ENDWHILE

    $default  reduce using rule 30 ($@18)

    $@18  go to state 148


State 130

   42 ELSEIF_BLOCK: ELSEIF LB $@21 A_EXPN . RB $@22 DO STATEMENTS
   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    RB     shift, and go to state 149
    LEQ    shift, and go to state 87
    GT     shift, and go to state 88
    LT     shift, and go to state 89
    NEQ    shift, and go to state 90
    DEQ    shift, and go to state 91
    LAND   shift, and go to state 92
    LOR    shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MUL    shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    EPLUS  shift, and go to state 99


State 131

   46 VAR_LIST: VAR $@24 COMA . VAR_LIST

    VAR  shift, and go to state 77

    VAR_LIST  go to state 150


State 132

   37 IF_BLOCK: IF LB $@19 A_EXPN RB $@20 DO . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 151


State 133

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   66       | A_EXPN LEQ $@30 A_EXPN .
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 66 (A_EXPN)]
    $default  reduce using rule 66 (A_EXPN)


State 134

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   68       | A_EXPN GT $@31 A_EXPN .
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 68 (A_EXPN)]
    $default  reduce using rule 68 (A_EXPN)


State 135

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   70       | A_EXPN LT $@32 A_EXPN .
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 70 (A_EXPN)]
    $default  reduce using rule 70 (A_EXPN)


State 136

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   72       | A_EXPN NEQ $@33 A_EXPN .
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 72 (A_EXPN)]
    $default  reduce using rule 72 (A_EXPN)


State 137

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   74       | A_EXPN DEQ $@34 A_EXPN .
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 74 (A_EXPN)]
    $default  reduce using rule 74 (A_EXPN)


State 138

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   62       | A_EXPN LAND $@28 A_EXPN .
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 62 (A_EXPN)]
    $default  reduce using rule 62 (A_EXPN)


State 139

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   64       | A_EXPN LOR $@29 A_EXPN .
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 64 (A_EXPN)]
    $default  reduce using rule 64 (A_EXPN)


State 140

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   78       | A_EXPN PLUS $@36 A_EXPN .
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 78 (A_EXPN)]
    $default  reduce using rule 78 (A_EXPN)


State 141

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   80       | A_EXPN MINUS $@37 A_EXPN .
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 80 (A_EXPN)]
    $default  reduce using rule 80 (A_EXPN)


State 142

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   82       | A_EXPN MUL $@38 A_EXPN .
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 82 (A_EXPN)]
    $default  reduce using rule 82 (A_EXPN)


State 143

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   84       | A_EXPN DIV $@39 A_EXPN .
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 84 (A_EXPN)]
    $default  reduce using rule 84 (A_EXPN)


State 144

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   86       | A_EXPN MOD $@40 A_EXPN .
   88       | A_EXPN . EPLUS $@41 A_EXPN

    EPLUS  shift, and go to state 99

    EPLUS     [reduce using rule 86 (A_EXPN)]
    $default  reduce using rule 86 (A_EXPN)


State 145

   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN
   88       | A_EXPN EPLUS $@41 A_EXPN .

    LEQ    shift, and go to state 87
    GT     shift, and go to state 88
    LT     shift, and go to state 89
    NEQ    shift, and go to state 90
    DEQ    shift, and go to state 91
    LAND   shift, and go to state 92
    LOR    shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MUL    shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    EPLUS  shift, and go to state 99

    LEQ       [reduce using rule 88 (A_EXPN)]
    GT        [reduce using rule 88 (A_EXPN)]
    LT        [reduce using rule 88 (A_EXPN)]
    NEQ       [reduce using rule 88 (A_EXPN)]
    DEQ       [reduce using rule 88 (A_EXPN)]
    LAND      [reduce using rule 88 (A_EXPN)]
    LOR       [reduce using rule 88 (A_EXPN)]
    PLUS      [reduce using rule 88 (A_EXPN)]
    MINUS     [reduce using rule 88 (A_EXPN)]
    MUL       [reduce using rule 88 (A_EXPN)]
    DIV       [reduce using rule 88 (A_EXPN)]
    MOD       [reduce using rule 88 (A_EXPN)]
    EPLUS     [reduce using rule 88 (A_EXPN)]
    $default  reduce using rule 88 (A_EXPN)


State 146

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 . ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    ASSIGNMENT  shift, and go to state 152


State 147

   28 STATEMENT: REPEAT $@15 STATEMENTS UNTIL LB $@16 A_EXPN . RB
   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    RB     shift, and go to state 153
    LEQ    shift, and go to state 87
    GT     shift, and go to state 88
    LT     shift, and go to state 89
    NEQ    shift, and go to state 90
    DEQ    shift, and go to state 91
    LAND   shift, and go to state 92
    LOR    shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MUL    shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    EPLUS  shift, and go to state 99


State 148

   31 STATEMENT: WHILE LB $@17 A_EXPN RB DO $@18 . STATEMENTS ENDWHILE

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 154


State 149

   42 ELSEIF_BLOCK: ELSEIF LB $@21 A_EXPN RB . $@22 DO STATEMENTS

    $default  reduce using rule 41 ($@22)

    $@22  go to state 155


State 150

   46 VAR_LIST: VAR $@24 COMA VAR_LIST .

    $default  reduce using rule 46 (VAR_LIST)


State 151

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   37 IF_BLOCK: IF LB $@19 A_EXPN RB $@20 DO STATEMENTS .

    ELSE      reduce using rule 37 (IF_BLOCK)
    ENDIF     reduce using rule 37 (IF_BLOCK)
    ELSEIF    reduce using rule 37 (IF_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 152

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT . $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    $default  reduce using rule 19 ($@9)

    $@9  go to state 156


State 153

   28 STATEMENT: REPEAT $@15 STATEMENTS UNTIL LB $@16 A_EXPN RB .

    $default  reduce using rule 28 (STATEMENT)


State 154

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   31 STATEMENT: WHILE LB $@17 A_EXPN RB DO $@18 STATEMENTS . ENDWHILE

    ENDWHILE  shift, and go to state 157

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 155

   42 ELSEIF_BLOCK: ELSEIF LB $@21 A_EXPN RB $@22 . DO STATEMENTS

    DO  shift, and go to state 158


State 156

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 . TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66

    TERMINALS  go to state 159


State 157

   31 STATEMENT: WHILE LB $@17 A_EXPN RB DO $@18 STATEMENTS ENDWHILE .

    $default  reduce using rule 31 (STATEMENT)


State 158

   42 ELSEIF_BLOCK: ELSEIF LB $@21 A_EXPN RB $@22 DO . STATEMENTS

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 160


State 159

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS . $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    $default  reduce using rule 20 ($@10)

    $@10  go to state 161


State 160

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   42 ELSEIF_BLOCK: ELSEIF LB $@21 A_EXPN RB $@22 DO STATEMENTS .

    ELSE      reduce using rule 42 (ELSEIF_BLOCK)
    ELSEIF    reduce using rule 42 (ELSEIF_BLOCK)
    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 161

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 . UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    UNTIL  shift, and go to state 162


State 162

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL . $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    $default  reduce using rule 21 ($@11)

    $@11  go to state 163


State 163

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 . A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    NUMBER  shift, and go to state 65
    VAR     shift, and go to state 66
    NOT     shift, and go to state 67

    A_EXPN     go to state 164
    TERMINALS  go to state 69


State 164

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN . $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR
   62 A_EXPN: A_EXPN . LAND $@28 A_EXPN
   64       | A_EXPN . LOR $@29 A_EXPN
   66       | A_EXPN . LEQ $@30 A_EXPN
   68       | A_EXPN . GT $@31 A_EXPN
   70       | A_EXPN . LT $@32 A_EXPN
   72       | A_EXPN . NEQ $@33 A_EXPN
   74       | A_EXPN . DEQ $@34 A_EXPN
   78       | A_EXPN . PLUS $@36 A_EXPN
   80       | A_EXPN . MINUS $@37 A_EXPN
   82       | A_EXPN . MUL $@38 A_EXPN
   84       | A_EXPN . DIV $@39 A_EXPN
   86       | A_EXPN . MOD $@40 A_EXPN
   88       | A_EXPN . EPLUS $@41 A_EXPN

    LEQ    shift, and go to state 87
    GT     shift, and go to state 88
    LT     shift, and go to state 89
    NEQ    shift, and go to state 90
    DEQ    shift, and go to state 91
    LAND   shift, and go to state 92
    LOR    shift, and go to state 93
    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MUL    shift, and go to state 96
    DIV    shift, and go to state 97
    MOD    shift, and go to state 98
    EPLUS  shift, and go to state 99

    $default  reduce using rule 22 ($@12)

    $@12  go to state 165


State 165

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 . COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    COMA  shift, and go to state 166


State 166

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA . VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    VAR_START  shift, and go to state 167


State 167

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START . PLUS $@13 RB DO $@14 STATEMENTS ENDFOR

    PLUS  shift, and go to state 168


State 168

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS . $@13 RB DO $@14 STATEMENTS ENDFOR

    $default  reduce using rule 23 ($@13)

    $@13  go to state 169


State 169

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 . RB DO $@14 STATEMENTS ENDFOR

    RB  shift, and go to state 170


State 170

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB . DO $@14 STATEMENTS ENDFOR

    DO  shift, and go to state 171


State 171

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO . $@14 STATEMENTS ENDFOR

    $default  reduce using rule 24 ($@14)

    $@14  go to state 172


State 172

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 . STATEMENTS ENDFOR

    $default  reduce using rule 5 (STATEMENTS)

    STATEMENTS  go to state 173


State 173

    4 STATEMENTS: STATEMENTS . $@2 STATEMENT
   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS . ENDFOR

    ENDFOR  shift, and go to state 174

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 174

   25 STATEMENT: FOR LB $@7 VAR_START DOT VAR $@8 ASSIGNMENT $@9 TERMINALS $@10 UNTIL $@11 A_EXPN $@12 COMA VAR_START PLUS $@13 RB DO $@14 STATEMENTS ENDFOR .

    $default  reduce using rule 25 (STATEMENT)
